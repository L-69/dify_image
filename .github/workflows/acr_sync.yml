name: Sync Docker Images to Alibaba Cloud from Docker Compose

on:
  push:
    branches:
      - main

jobs:
  sync-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code from current repository
      uses: actions/checkout@v3
      with:
        path: current-repo

    - name: List files in the current repository
      run: |
        echo "Listing files in the current repository"
        ls -alh current-repo

    - name: Read version from dify-version.txt in current repository
      id: read_version
      run: |
        version=$(cat current-repo/dify-version.txt)
        echo "Dify version: $version"
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Checkout code from Dify repo
      uses: actions/checkout@v3
      with:
        repository: langgenius/dify
        path: dify-repo

    - name: Checkout specific tag from Dify repo
      run: |
        version="${{ steps.read_version.outputs.version }}"
        echo "Checking out version tag: $version"
        cd dify-repo
        git fetch --tags
        git checkout "$version" || git checkout "tags/$version"

    - name: Install yq
      run: |
        set -e
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.27.3/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq
        yq --version

    - name: Parse docker-compose.yaml for images
      id: parse_docker_compose
      run: |
        images=$(yq e '.services[].image // ""' dify-repo/docker/docker-compose.yaml | grep -v '^$' | tr '\n' ' ')
        echo "Images: $images"
        echo "images=$images" >> $GITHUB_OUTPUT

    - name: Log in to Alibaba Cloud ACR
      run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_REGISTRY }} --username ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Pull and push images to Alibaba Cloud ACR
      run: |
        set -e
        images="${{ steps.parse_docker_compose.outputs.images }}"
        for image in $images; do
          echo "Processing image: $image"
          
          # Pull the image from DockerHub
          docker pull $image
          
          # Extract image tag (last part)
          image_tag=$(echo $image | awk -F'/' '{print $NF}')
          
          # Tag the image for ACR
          acr_image="${{ secrets.ACR_REGISTRY }}/kenwood-ai/$image_tag"
          echo "Tagging image: $acr_image"
          docker tag $image $acr_image

          # 删除原始镜像
          docker rmi $image || true
          
          # Push the image to ACR
          echo "Pushing image to ACR: $acr_image"
          docker push $acr_image

          # 删除 ACR 镜像，释放空间
          docker rmi $acr_image || true
        done
